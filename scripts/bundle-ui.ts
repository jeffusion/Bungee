#!/usr/bin/env bun
import { readFileSync, writeFileSync, readdirSync, existsSync } from 'fs';
import { join } from 'path';

const uiDistPath = 'packages/ui/dist';
const outputPath = 'packages/core/src/ui/assets.ts';

// 检查 UI 是否已构建
if (!existsSync(uiDistPath)) {
  console.error('❌ UI dist not found. Please run "npm run build:ui" first.');
  process.exit(1);
}

// 读取 HTML
const htmlPath = join(uiDistPath, 'index.html');
if (!existsSync(htmlPath)) {
  console.error('❌ index.html not found in UI dist.');
  process.exit(1);
}
const html = readFileSync(htmlPath, 'utf-8');

// 读取 assets 目录下的所有文件
const assetsDir = join(uiDistPath, 'assets');
const assets: Record<string, string> = {};

if (existsSync(assetsDir)) {
  const assetFiles = readdirSync(assetsDir);
  for (const file of assetFiles) {
    const filePath = join(assetsDir, file);
    const content = readFileSync(filePath, 'utf-8');
    assets[file] = content;
  }
}

// 生成 TypeScript 模块
const code = `// Auto-generated by scripts/bundle-ui.ts
// Do not edit manually
import { get } from 'lodash-es';

export const uiAssets = {
  html: ${JSON.stringify(html)},
  assets: ${JSON.stringify(assets, null, 2)}
} as const;

export function getAsset(path: string): string | null {
  if (path === '/' || path === '/index.html') {
    return uiAssets.html;
  }

  // 移除前缀 /assets/
  const assetPath = path.replace(/^\\/assets\\//, '');
  return get(uiAssets.assets, assetPath, null);
}
`;

writeFileSync(outputPath, code);
console.log('✓ UI assets bundled into Core package');
console.log(`  - HTML: ${(html.length / 1024).toFixed(2)} KB`);
console.log(`  - Assets: ${Object.keys(assets).length} files`);

const totalSize = html.length + Object.values(assets).reduce((sum, content) => sum + content.length, 0);
console.log(`  - Total: ${(totalSize / 1024).toFixed(2)} KB`);
